{"version":3,"sources":["css/cs.module.css","Event.js","EventsJson.js","common.js","Events.js","ShowEvents.js","serviceWorker.js","index.js"],"names":["module","exports","Event","group","date","description","type","this","EventsJson","Common","dateString","undefined","elements","split","length","Events","sortBy","require","eventsSort","events","i","event","Date","InverseDateString","push","sort","ShowEvents","groupName","groupNameDisplay","map","index","className","styles","key","format","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4adc5082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"event\":\"cs_event__2tDr_\",\"group\":\"cs_group__1-hdn\",\"date\":\"cs_date__1dYKo\",\"description\":\"cs_description__3EtTf\",\"type\":\"cs_type__3nZ3J\"};","class Event {\r\n  constructor(group, date, description, type) {\r\n    this.group = '2019-2020';\r\n    this.date = date;\r\n    this.description = description;\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nexport default Event;"," const EventsJson = {\r\n  'Events':[\r\n    {'group' : '2019-2020', 'date' : '17-01-2020', 'description' : 'Hot-Spirit', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '07-11-2019', 'description' : 'John', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '20-11-2019', 'description' : 'MEC Jan Timman', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '23-11-2019', 'description' : 'Lekstroom 2 - OZU', 'type' : 'Wedstrijd' }, \r\n    {'group' : '2019-2020', 'date' : '02-12-2019', 'description' : 'Ger', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '12-12-2019', 'description' : 'John', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '25-01-2020', 'description' : 'Wijk aan zee', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '04-11-2019', 'description' : 'Ger', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '14-12-2019', 'description' : 'OZU-Almere 4', 'type' : 'Wedstrijd' },\r\n    {'group' : '2019-2020', 'date' : '20-12-2019', 'description' : 'Hot-Spirit', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '25-12-2019', 'description' : '2512 toernooi', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '21-02-2020', 'description' : 'Hot-Spirit', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '23-01-2020', 'description' : 'John', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '07-03-2020', 'description' : 'OZU-ASV 6', 'type' : 'Wedstrijd' },\r\n    {'group' : '2019-2020', 'date' : '02-03-2020', 'description' : 'Ger', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '28-03-2020', 'description' : 'Magnus 2 - OZU', 'type' : 'Wedstrijd' },\r\n    {'group' : '2019-2020', 'date' : '16-04-2020', 'description' : 'John', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '15-11-2019', 'description' : 'Hot-Spirit', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '24-01-2020', 'description' : 'Wijk aan zee', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '01-02-2020', 'description' : 'En Passant 3 - OZU', 'type' : 'Wedstrijd' },\r\n    {'group' : '2019-2020', 'date' : '03-02-2020', 'description' : 'Ger', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '20-02-2020', 'description' : 'John', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '20-03-2020', 'description' : 'Hot-Spirit', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '06-04-2020', 'description' : 'Ger', 'type' : 'Training' },\r\n    {'group' : '2019-2020', 'date' : '17-04-2020', 'description' : 'Hot-Spirit', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '18-04-2020', 'description' : 'OZU-Wageningen 4', 'type' : 'Wedstrijd' },\r\n    {'group' : '2019-2020', 'date' : '15-05-2020', 'description' : 'Hot-Spirit', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '05-06-2020', 'description' : 'OKU', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '06-06-2020', 'description' : 'OKU', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '07-06-2020', 'description' : 'OKU', 'type' : 'Toernooi' },\r\n    {'group' : '2019-2020', 'date' : '19-06-2020', 'description' : 'Hot-Spirit', 'type' : 'Toernooi' }\r\n  ]  \r\n}\r\n\r\nexport default EventsJson;\r\n\r\n","class Common {\r\n  static InverseDateString(dateString){\r\n    if(dateString == undefined){\r\n      return null;\r\n    }\r\n\r\n    let elements = dateString.split('-');\r\n    let newDateString = null;\r\n    if(elements.length !== 3){\r\n      return null;\r\n    }\r\n    return `${elements[2]}-${elements[1]}-${elements[0]}`;\r\n  }\r\n}\r\n\r\nexport default Common;","import Event from './Event.js';\r\nimport EventsJson from './EventsJson.js';\r\nimport Common from './common.js';\r\n\r\nclass Events {\r\n    constructor () {\r\n        var sortBy = require('sort-by'),\r\n                         eventsSort = [];\r\n        this.events = [];\r\n        let eventsList = EventsJson.Events;\r\n\r\n        for(let i = 0; i < EventsJson.Events.length; i++){\r\n            let event = new Event(\r\n                EventsJson.Events[i].group,\r\n                new Date(Common.InverseDateString(EventsJson.Events[i].date)),\r\n                EventsJson.Events[i].description,\r\n                EventsJson.Events[i].type);\r\n            this.events.push(event);\r\n        }\r\n\r\n        eventsSort = this.events;\r\n        eventsSort.sort(sortBy('date'));\r\n        // Does nothing, the array is a refence and is now al sort. \r\n        this.events = eventsSort;\r\n    }\r\n}\r\n\r\nexport default Events;","/*jshint esversion: 6 */\r\nimport React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nimport Events from './Events';\r\nimport styles from './css/cs.module.css'\r\nclass ShowEvents extends Component {\r\n\r\n  render() {\r\n    var events = new Events().events;\r\n    let groupName = null;\r\n    let groupNameDisplay = null;\r\n    let newLineDisplay = '';\r\n    return (\r\n      <>\r\n        <div>Events</div>\r\n        <div>\r\n            {\r\n              events.map(\r\n                function (event, index) {                  \r\n                  if(groupName != event.group){\r\n                    groupName = event.group;\r\n                    groupNameDisplay = `For ${event.group}`;\r\n                  }\r\n                  else\r\n                  {\r\n                    groupNameDisplay = '';\r\n                  }\r\n\r\n                  return <div className={styles.event} key={index}>\r\n                    <div className={styles.group}>\r\n                      {groupNameDisplay}\r\n                    </div>\r\n                    <div className={styles.date}>\r\n                    {\r\n                        <Moment format='DD-MM-YYYY'>\r\n                          {event.date}\r\n                        </Moment>\r\n                    }\r\n                    </div>\r\n                    <div className={styles.description}>\r\n                      {event.description}\r\n                    </div>\r\n                    <div className={styles.type}>\r\n                      {event.type}\r\n                    </div>\r\n                  </div>;\r\n\r\n                }\r\n              )\r\n            }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowEvents;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport ShowEvents from './ShowEvents';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<ShowEvents />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}